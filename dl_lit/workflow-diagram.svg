<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 1250">
  <!-- Background -->
  <rect width="1200" height="1250" fill="#f8f9fa" />
  
  <!-- Title -->
  <text x="600" y="30" font-family="Arial" font-size="24" font-weight="bold" text-anchor="middle">Scholarly Reference Processing Workflow</text>
  
  <!-- Input PDF document -->
  <rect x="530" y="50" width="140" height="60" rx="5" fill="#d1e7dd" stroke="#198754" stroke-width="2" />
  <text x="600" y="85" font-family="Arial" font-size="14" font-weight="bold" text-anchor="middle">Input PDF Document</text>
  
  <!-- Step 1: get_bib_pages.py -->
  <rect x="100" y="160" width="1000" height="130" rx="5" fill="#e2e3e5" stroke="#6c757d" stroke-width="2" />
  <text x="600" y="180" font-family="Arial" font-size="16" font-weight="bold" text-anchor="middle">get_bib_pages.py</text>
  
  <!-- Step 1 Contents -->
  <rect x="130" y="195" width="280" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="270" y="215" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">1. Identify Bibliography Sections</text>
  <text x="270" y="235" font-family="Arial" font-size="11" text-anchor="middle">Uses Gemini API to find</text>
  <text x="270" y="250" font-family="Arial" font-size="11" text-anchor="middle">reference section page ranges</text>
  
  <rect x="460" y="195" width="280" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="600" y="215" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">2. Detect Page Numbering</text>
  <text x="600" y="235" font-family="Arial" font-size="11" text-anchor="middle">Calculate offset between printed</text>
  <text x="600" y="250" font-family="Arial" font-size="11" text-anchor="middle">and physical page numbers</text>
  
  <rect x="790" y="195" width="280" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="930" y="215" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">3. Extract Bibliography Pages</text>
  <text x="930" y="235" font-family="Arial" font-size="11" text-anchor="middle">Creates individual PDF files</text>
  <text x="930" y="250" font-family="Arial" font-size="11" text-anchor="middle">for each bibliography page</text>
  
  <!-- Arrows for Step 1 - Sequential Process Flow -->
  <path d="M600 110 L600 160" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />
  <path d="M410 230 L460 230" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  <path d="M740 230 L790 230" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  
  <!-- Output of Step 1 -->
  <rect x="530" y="310" width="140" height="50" rx="5" fill="#d1e7dd" stroke="#198754" stroke-width="2" />
  <text x="600" y="340" font-family="Arial" font-size="14" font-weight="bold" text-anchor="middle">Bibliography PDFs</text>
  
  <!-- Arrow from Step 1 to output -->
  <path d="M600 290 L600 310" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />
  
  <!-- Step 2: APIscraper.py -->
  <rect x="100" y="380" width="1000" height="130" rx="5" fill="#e2e3e5" stroke="#6c757d" stroke-width="2" />
  <text x="600" y="400" font-family="Arial" font-size="16" font-weight="bold" text-anchor="middle">APIscraper.py</text>
  
  <!-- Step 2 Contents -->
  <rect x="130" y="420" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="235" y="440" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">1. Extract PDF Text</text>
  <text x="235" y="460" font-family="Arial" font-size="11" text-anchor="middle">Extract text content from</text>
  <text x="235" y="475" font-family="Arial" font-size="11" text-anchor="middle">PDFs using pdfminer</text>
  
  <rect x="370" y="420" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="475" y="440" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">2. Claude API Processing</text>
  <text x="475" y="460" font-family="Arial" font-size="11" text-anchor="middle">Use Claude API to extract</text>
  <text x="475" y="475" font-family="Arial" font-size="11" text-anchor="middle">bibliographic references</text>
  
  <rect x="610" y="420" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="715" y="440" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">3. Format Bibliography</text>
  <text x="715" y="460" font-family="Arial" font-size="11" text-anchor="middle">Structure references with</text>
  <text x="715" y="475" font-family="Arial" font-size="11" text-anchor="middle">titles, authors, DOIs, etc.</text>
  
  <rect x="850" y="420" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="955" y="440" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">4. Generate JSON</text>
  <text x="955" y="460" font-family="Arial" font-size="11" text-anchor="middle">Create structured</text>
  <text x="955" y="475" font-family="Arial" font-size="11" text-anchor="middle">bibliography files</text>
  
  <!-- Arrows for Step 2 - Sequential Process Flow -->
  <path d="M600 360 L600 380" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />
  <path d="M340 455 L370 455" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  <path d="M580 455 L610 455" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  <path d="M820 455 L850 455" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  
  <!-- Output of Step 2 -->
  <rect x="500" y="530" width="200" height="50" rx="5" fill="#d1e7dd" stroke="#198754" stroke-width="2" />
  <text x="600" y="560" font-family="Arial" font-size="14" font-weight="bold" text-anchor="middle">Bibliography JSON Files</text>
  
  <!-- Arrow from Step 2 to output -->
  <path d="M600 510 L600 530" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />
  
  <!-- Step 3: OpenAlexScraper.py -->
  <rect x="100" y="600" width="1000" height="270" rx="5" fill="#e2e3e5" stroke="#6c757d" stroke-width="2" />
  <text x="600" y="620" font-family="Arial" font-size="16" font-weight="bold" text-anchor="middle">OpenAlexScraper.py</text>
  
  <!-- Step 3 Contents -->
  <rect x="120" y="640" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="225" y="660" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">1. Process Bibliography</text>
  <text x="225" y="680" font-family="Arial" font-size="11" text-anchor="middle">Parse JSON references</text>
  <text x="225" y="695" font-family="Arial" font-size="11" text-anchor="middle">for metadata enrichment</text>
  
  <!-- API Searches detailed view -->
  <rect x="360" y="640" width="470" height="150" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="595" y="660" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">2. API Searches (Steps 1-9)</text>
  
  <!-- API Search Steps -->
  <rect x="375" y="675" width="135" height="30" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="443" y="695" font-family="Arial" font-size="10" text-anchor="middle">Steps 1-3: Exact Match</text>
  
  <rect x="520" y="675" width="135" height="30" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="588" y="695" font-family="Arial" font-size="10" text-anchor="middle">Steps 4-6: Fuzzy Search</text>
  
  <rect x="665" y="675" width="135" height="30" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="733" y="695" font-family="Arial" font-size="10" text-anchor="middle">Step 7: Search Parameter</text>
  
  <rect x="375" y="715" width="135" height="30" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="443" y="735" font-family="Arial" font-size="10" text-anchor="middle">Step 8: Crossref API</text>
  
  <rect x="520" y="715" width="135" height="30" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="588" y="735" font-family="Arial" font-size="10" text-anchor="middle">Step 9: Container Title</text>
  
  <rect x="665" y="715" width="135" height="30" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="733" y="730" font-family="Arial" font-size="9" text-anchor="middle">Tries all steps until match found</text>
  <text x="733" y="740" font-family="Arial" font-size="9" text-anchor="middle">or all steps exhausted</text>
  
  <!-- Search methods explanation -->
  <text x="595" y="760" font-family="Arial" font-size="10" text-anchor="middle">Each step uses different search queries and parameters,</text>
  <text x="595" y="775" font-family="Arial" font-size="10" text-anchor="middle">progressively using more relaxed matching criteria</text>
  
  <rect x="860" y="640" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="965" y="660" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">3. Author Matching</text>
  <text x="965" y="680" font-family="Arial" font-size="11" text-anchor="middle">Use fuzzy matching to</text>
  <text x="965" y="695" font-family="Arial" font-size="11" text-anchor="middle">confirm identity of works</text>
  
  <rect x="595" y="810" width="210" height="70" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="700" y="830" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">4. Enhance Metadata</text>
  <text x="700" y="850" font-family="Arial" font-size="11" text-anchor="middle">Add DOIs, open access</text>
  <text x="700" y="865" font-family="Arial" font-size="11" text-anchor="middle">info, references, etc.</text>
  
  <!-- Arrows for Step 3 - Sequential Process Flow -->
  <path d="M600 580 L600 600" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />
  <path d="M330 675 L360 675" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  <path d="M830 675 L860 675" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  <path d="M965 710 L965 845 L805 845" stroke="#000" stroke-width="1.5" fill="none" marker-end="url(#arrowhead)" />
  
  <!-- Output of Step 3 -->
  <rect x="475" y="900" width="250" height="50" rx="5" fill="#d1e7dd" stroke="#198754" stroke-width="2" />
  <text x="600" y="930" font-family="Arial" font-size="14" font-weight="bold" text-anchor="middle">Enhanced JSON Files with DOIs</text>
  
  <!-- Arrow from Step 3 to output -->
  <path d="M700 880 L700 900" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />

  <!-- Step 4: download_gem.py -->
  <rect x="100" y="970" width="1000" height="260" rx="5" fill="#e2e3e5" stroke="#6c757d" stroke-width="2" />
  <text x="600" y="990" font-family="Arial" font-size="16" font-weight="bold" text-anchor="middle">download_gem.py</text>
  
  <!-- Step 4 Contents - Download Methods -->
  <rect x="120" y="1010" width="450" height="200" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="345" y="1030" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">Download Methods (Tried in Sequence)</text>
  
  <rect x="135" y="1045" width="130" height="35" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="200" y="1067" font-family="Arial" font-size="11" font-weight="bold" text-anchor="middle">1. Direct URL/DOI</text>
  
  <rect x="135" y="1090" width="130" height="35" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="200" y="1112" font-family="Arial" font-size="11" font-weight="bold" text-anchor="middle">2. Unpaywall/OpenAlex</text>
  
  <rect x="135" y="1135" width="130" height="35" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="200" y="1157" font-family="Arial" font-size="11" font-weight="bold" text-anchor="middle">3. Gemini Search</text>
  
  <rect x="300" y="1045" width="130" height="35" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="365" y="1067" font-family="Arial" font-size="11" font-weight="bold" text-anchor="middle">4. Sci-Hub</text>
  
  <rect x="300" y="1090" width="130" height="35" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="365" y="1112" font-family="Arial" font-size="11" font-weight="bold" text-anchor="middle">5. LibGen</text>

  <rect x="300" y="1135" width="250" height="35" rx="3" fill="#f0f1f2" stroke="#6c757d" stroke-width="1" />
  <text x="425" y="1155" font-family="Arial" font-size="10" text-anchor="middle">Fallback through methods until success or all fail</text>
  
  <text x="345" y="1185" font-family="Arial" font-size="10" text-anchor="middle">• Each method is tried in order</text>
  <text x="345" y="1200" font-family="Arial" font-size="10" text-anchor="middle">• Downloaded PDFs are validated for completeness</text>

  <!-- Step 4 Contents - PDF Processing and Reference Handling -->
  <rect x="600" y="1010" width="280" height="95" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="740" y="1030" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">PDF Processing</text>
  
  <text x="740" y="1050" font-family="Arial" font-size="10" text-anchor="middle">• Validates PDFs to ensure completeness</text>
  <text x="740" y="1065" font-family="Arial" font-size="10" text-anchor="middle">• Checks for encryption/corruption</text>
  <text x="740" y="1080" font-family="Arial" font-size="10" text-anchor="middle">• Verifies PDF is not a preview/sample</text>
  <text x="740" y="1095" font-family="Arial" font-size="10" text-anchor="middle">• Uses rate limiting for API requests</text>
  
  <!-- Referenced Works Handling -->
  <rect x="600" y="1115" width="280" height="95" rx="5" fill="#fff" stroke="#6c757d" stroke-width="1" />
  <text x="740" y="1135" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">Referenced Works Handling</text>
  
  <text x="740" y="1155" font-family="Arial" font-size="10" text-anchor="middle">• Extracts references from metadata</text>
  <text x="740" y="1170" font-family="Arial" font-size="10" text-anchor="middle">• Creates bibliography JSON for references</text>
  <text x="740" y="1185" font-family="Arial" font-size="10" text-anchor="middle">• Recursively processes reference PDFs</text>
  <text x="740" y="1200" font-family="Arial" font-size="10" text-anchor="middle">• Builds a network of cited papers</text>
  
  <!-- OCR Processing with gem_ocr.py -->
  <rect x="910" y="1010" width="170" height="200" rx="5" fill="#cfe2ff" stroke="#0d6efd" stroke-width="1" />
  <text x="995" y="1030" font-family="Arial" font-size="12" font-weight="bold" text-anchor="middle">gem_ocr.py (if needed)</text>
  
  <text x="995" y="1050" font-family="Arial" font-size="10" text-anchor="middle">• Slices PDFs into batches</text>
  <text x="995" y="1065" font-family="Arial" font-size="10" text-anchor="middle">• Processes with Gemini OCR</text>
  <text x="995" y="1080" font-family="Arial" font-size="10" text-anchor="middle">• Extracts text and tables</text>
  <text x="995" y="1095" font-family="Arial" font-size="10" text-anchor="middle">• Handles rate limits</text>
  <text x="995" y="1110" font-family="Arial" font-size="10" text-anchor="middle">• Preserves formatting</text>
  <text x="995" y="1125" font-family="Arial" font-size="10" text-anchor="middle">• Stitches results together</text>
  
  <!-- Recursive flow visualization - just the path without an annotation box -->
  <!-- Main recursive flow path going to the left side of download_gem.py -->
  <path d="M740 1190 L740 1230 L80 1230 L80 1040 L120 1040" 
        stroke="#0d6efd" stroke-width="2" stroke-dasharray="6,3" fill="none" marker-end="url(#arrowheadBlue)" />
  
  <!-- Simple text label without box -->
  <text x="400" y="1245" font-family="Arial" font-size="11" font-weight="bold" text-anchor="middle" fill="#0d6efd">RECURSIVE PROCESSING: Referenced works restart the download process</text>
  
  <!-- Arrows connecting to Step 4 -->
  <path d="M600 950 L600 970" stroke="#000" stroke-width="2" fill="none" marker-end="url(#arrowhead)" />
  
  <!-- Define arrowhead markers -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#000" />
    </marker>
    <marker id="arrowheadBlue" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#0d6efd" />
    </marker>
  </defs>
</svg>
